openapi: 3.0.0
info:
  title: Admin API Documentation by Anirudh
  description: Admin API documentation for the application
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
paths:
  /admin_login:
    post:
      summary: Admin login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  info:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      role:
                        type: string
        '201':
          description: Incorrect credentials or admin doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '202':
          description: Wrong password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /admin_logout:
    post:
      summary: Admin logout from the system
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /lib_check_permission:
    get:
      summary: Check admin permission
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Access granted
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '201':
          description: Access denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /sendAlert/{id}:
    post:
      summary: Send alert to all users except the sender
      parameters:
        - name: id
          in: path
          description: User ID who triggered the alert
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alertMsg:
                  type: string
                name:
                  type: string
                email:
                  type: string
                dt:
                  type: string
              required:
                - alertMsg
                - name
                - email
                - dt
      responses:
        '200':
          description: Alert sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /getAllRequests:
    get:
      summary: Get all user requests (issued, requested, returned)
      responses:
        '200':
          description: Successfully retrieved all user requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  issued_users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                        user_name:
                          type: string
                        user_email:
                          type: string
                        issue_date:
                          type: string
                          format: date-time
                        due_date:
                          type: string
                          format: date-time
                  requested_users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                        user_name:
                          type: string
                        user_email:
                          type: string
                        request_date:
                          type: string
                          format: date-time
                  returned_users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                        user_name:
                          type: string
                        user_email:
                          type: string
                        return_date:
                          type: string
                          format: date-time
                        status:
                          type: string
                        re_issue:
                          type: string

  /grantUser:
    post:
      summary: Grant privileged status to a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id
      responses:
        '200':
          description: User granted privileges successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '201':
          description: Error in granting privileges
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /rejectUser:
    post:
      summary: Reject a user’s request and remove their privileges
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
              required:
                - user_id
      responses:
        '200':
          description: User request rejected and privileges revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '201':
          description: Error in rejecting user
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /revokeUser:
    post:
      summary: Revoke user’s privileges before the due date
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                days_left:
                  type: integer
              required:
                - user_id
                - days_left
      responses:
        '200':
          description: User privileges revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '201':
          description: Error in revoking user
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /generate_report:
    post:
      summary: Generate a disaster analysis report and send via email
      responses:
        '200':
          description: Report generated and sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
